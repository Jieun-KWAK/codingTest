import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.Stack;

// 괄호 문자열의 유효성을 검사하는 클래스
class Validator {
    public boolean isValid(String ps) {
        Stack<Character> stack = new Stack<>();

        for (char ch : ps.toCharArray()) {
            if (ch == '(') {
                stack.push(ch);
            } else if (ch == ')') {
                if (stack.isEmpty()) {
                    return false;
                }
                stack.pop();
            }
        }
        
        return stack.isEmpty();
    }
}

public class Parenthesis_String {
    public static void main(String[] args) throws IOException {
        // 버퍼를 통해 괄호 입력 받기
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int T = Integer.parseInt(br.readLine().trim());

        String[] testCases = new String[T];
        for (int i = 0; i < T; i++) {
            testCases[i] = br.readLine().trim();
        }

        // 유효성 검사 및 결과 출력
        Validator validator = new Validator();
        for (String ps : testCases) {
            if (validator.isValid(ps)) {
                System.out.println("YES");
            } else {
                System.out.println("NO");
            }
        }
    }
}
